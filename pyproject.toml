[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "openshift-ai-security-dashboard"
version = "1.0.0"
description = "OpenShift AI Security Overview Dashboard - A comprehensive security analysis tool for Red Hat OpenShift AI"
authors = [
    {name = "Adam Miller", email = "adam@miller.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
keywords = ["security", "openshift", "ai", "dashboard", "cve", "container"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "streamlit>=1.37.0",
    "sqlalchemy>=2.0.0",
    "requests>=2.32.0",
    "pandas>=2.2.0",
    "plotly>=5.22.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "alembic>=1.13.0",
    "reportlab>=4.2.0",
    "fpdf2>=2.7.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "flake8>=7.1.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
    "httpx>=0.27.0",
    "pytest-mock>=3.14.0",
]

test = [
    "pytest>=8.3.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "httpx>=0.27.0",
    "pytest-mock>=3.14.0",
]

[project.scripts]
openshift-ai-security = "src.app:main"

[project.urls]
Homepage = "https://github.com/admiller/openshift-ai-security-dashboard"
Repository = "https://github.com/admiller/openshift-ai-security-dashboard"
Issues = "https://github.com/admiller/openshift-ai-security-dashboard/issues"

[tool.black]
line-length = 88
target-version = ["py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
pythonpath = ["."]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/tests",
    "/.gitignore",
    "/.pre-commit-config.yaml",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]